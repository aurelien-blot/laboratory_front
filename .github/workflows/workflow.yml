name: CI/CD - Front (Vue.js)

on:
  push:
    branches: [ main ]
    paths:
      - 'laboratory_front/**'
      - '.github/workflows/workflow.yml'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: front-deploy
  cancel-in-progress: true

env:
  IMAGE: ghcr.io/${{ secrets.GHCR_USER }}/laboratory-front
  DOMAIN: labo-castruche.duckdns.org
  
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Compute image tag
        id: vars
        run: echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Login GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USER }} --password-stdin

      - name: Build image
        run: |
          docker build -t $IMAGE:latest -t $IMAGE:${{ steps.vars.outputs.TAG }} .

      - name: Push images
        run: |
          docker push $IMAGE:latest
          docker push $IMAGE:${{ steps.vars.outputs.TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-push]
    steps:
      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy FRONT
        env:
          GHCR_USER: ${{ secrets.GHCR_USER }}
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << EOF
            set -e
            echo "$GHCR_TOKEN" | docker login ghcr.io -u "$GHCR_USER" --password-stdin
            docker pull ghcr.io/$GHCR_USER/laboratory-front:latest
            docker stop laboratory_front || true
            docker rm laboratory_front || true
            # 1) Router HTTPS (principal)
            docker network create edge || true
            docker run -d --name laboratory_front \
              --restart=always \
              --network edge \
              --label 'traefik.enable=true' \
              --label 'traefik.docker.network=edge' \
              --label "traefik.http.routers.laboratory_front.rule=Host(\"$DOMAIN\")" \
              --label 'traefik.http.routers.laboratory_front.entrypoints=websecure' \
              --label 'traefik.http.routers.laboratory_front.tls.certresolver=le' \
              --label 'traefik.http.services.laboratory_front.loadbalancer.server.port=80' \
              ghcr.io/$GHCR_USER/laboratory-front:latest
          EOF
